{"blocks":[{"type":"group","id":"684a0aa91a88","properties":[],"nested":[{"type":"inline","id":"785968d8c92b","properties":[],"nested":[{"type":"heading","id":"89ea79cb1b4a","properties":["name"],"size":1,"fallback":"-"},{"type":"image","id":"395b3ba8f888","properties":["image"],"fallback":"-","conditioned":true}]}],"hasRule":false},{"type":"group","id":"d85aca580b5a","properties":[],"nested":[{"type":"property","id":"dae89af8f9ab","properties":[""],"fallback":"-","display":"","callback":"return `<b><i>Tier ${monster.tier} ${monster.type}</b></i>`","hasRule":false},{"type":"text","id":"591a19bbbbeb","properties":["description"],"text":null,"fallback":"-"},{"type":"property","id":"281838fb0a3b","properties":["motives_and_tactics"],"fallback":"-","display":"Motives & Tactics:","conditioned":true}],"hasRule":true},{"type":"group","id":"f8581ad9a94b","properties":[],"nested":[{"type":"javascript","id":"8a98db6a5b8b","conditioned":false,"code":"// 1. Inject CSS as a <style> block\nconst style = document.createElement(\"style\");\nstyle.innerText = `\n  .statblock-table-header {\n    font-weight: var(--active-table-header-font-weight);\n  }\n  .statblock-table {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  .table-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column nowrap;\n  }\n`;\ndocument.head.appendChild(style);\n\n// 2. Data\nconst headers = [\"Difficulty\", \"Thresholds\", \"HP\", \"Stress\", \"ATK\"];\nconst values = [\n  [monster.difficulty],\n  [monster.thresholds],\n  [monster.hp],\n  [monster.stress],\n  [monster.atk]\n];\n\n// 3. Create stat block container\nconst statBlock = document.createElement(\"div\");\nstatBlock.classList.add(\"statblock-table\");\n\n// 4. Generate stat columns\nfor (let i = 0; i < headers.length; i++) {\n  const tableItem = document.createElement(\"div\");\n  tableItem.classList.add(\"table-item\");\n\n  const header = document.createElement(\"span\");\n  header.classList.add(\"statblock-table-header\");\n  header.innerText = headers[i];\n  tableItem.appendChild(header);\n\n  for (let val of values[i]) {\n    const valueSpan = document.createElement(\"span\");\n    valueSpan.innerText = val;\n    tableItem.appendChild(valueSpan);\n  }\n\n  statBlock.appendChild(tableItem);\n}\n\n// 5. Append to the DOM\nreturn statBlock; // or use a specific container"},{"type":"property","id":"19a8c8194b8a","properties":["attack"],"fallback":"-","callback":"return `<strong>${monster.attack}</strong>: ${monster.range} | ${monster.damage}`","doNotAddClass":true,"display":" "},{"type":"property","id":"0a0a688a7b5a","properties":["experience"],"fallback":"-","display":"Experience:","conditioned":true}],"hasRule":true},{"type":"group","id":"5b8b6b59ebd9","properties":[],"nested":[{"type":"traits","id":"e95ad98a98e8","properties":["feats"],"fallback":"-","heading":"Features:"}],"hasRule":true}],"name":"Daggerheart Adversary","id":"daggerheart-adversary"}
